[{"/Users/anna.welc/PhpstormProjects/planner/frontend/src/index.tsx":"1","/Users/anna.welc/PhpstormProjects/planner/frontend/src/App.tsx":"2","/Users/anna.welc/PhpstormProjects/planner/frontend/src/reportWebVitals.ts":"3","/Users/anna.welc/PhpstormProjects/planner/frontend/src/useFetch.ts":"4","/Users/anna.welc/PhpstormProjects/planner/frontend/src/Recipes.tsx":"5","/Users/anna.welc/PhpstormProjects/planner/frontend/src/AddRecipe.tsx":"6","/Users/anna.welc/PhpstormProjects/planner/frontend/src/Home.tsx":"7","/Users/anna.welc/PhpstormProjects/planner/frontend/src/ShoppingList.tsx":"8","/Users/anna.welc/PhpstormProjects/planner/frontend/src/Recipe.tsx":"9","/Users/anna.welc/PhpstormProjects/planner-frontend/src/index.tsx":"10","/Users/anna.welc/PhpstormProjects/planner-frontend/src/reportWebVitals.ts":"11","/Users/anna.welc/PhpstormProjects/planner-frontend/src/App.tsx":"12","/Users/anna.welc/PhpstormProjects/planner-frontend/src/AddRecipeConnector.tsx":"13","/Users/anna.welc/PhpstormProjects/planner-frontend/src/Home.tsx":"14","/Users/anna.welc/PhpstormProjects/planner-frontend/src/ShoppingList.tsx":"15","/Users/anna.welc/PhpstormProjects/planner-frontend/src/useFetch.ts":"16","/Users/anna.welc/PhpstormProjects/planner-frontend/src/AddRecipe.tsx":"17","/Users/anna.welc/PhpstormProjects/planner-frontend/src/Recipes.tsx":"18","/Users/anna.welc/PhpstormProjects/planner-frontend/src/Recipe.tsx":"19","/Users/anna.welc/PhpstormProjects/planner-frontend/src/constants/config.ts":"20","/Users/anna.welc/PhpstormProjects/planner-frontend/src/Context.tsx":"21","/Users/anna.welc/PhpstormProjects/planner-frontend/src/useRecipesContext.ts":"22"},{"size":500,"mtime":1606838642657,"results":"23","hashOfConfig":"24"},{"size":1464,"mtime":1607013842732,"results":"25","hashOfConfig":"24"},{"size":425,"mtime":1606838642659,"results":"26","hashOfConfig":"24"},{"size":1053,"mtime":1606894624135,"results":"27","hashOfConfig":"24"},{"size":682,"mtime":1607261228394,"results":"28","hashOfConfig":"24"},{"size":6905,"mtime":1607167882854,"results":"29","hashOfConfig":"24"},{"size":4363,"mtime":1607279436987,"results":"30","hashOfConfig":"24"},{"size":1387,"mtime":1607287397351,"results":"31","hashOfConfig":"24"},{"size":987,"mtime":1607277413335,"results":"32","hashOfConfig":"24"},{"size":500,"mtime":1606838642657,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1606838642659,"results":"35","hashOfConfig":"34"},{"size":1616,"mtime":1609429277595,"results":"36","hashOfConfig":"34"},{"size":395,"mtime":1607013796301,"results":"37","hashOfConfig":"34"},{"size":4676,"mtime":1609454486788,"results":"38","hashOfConfig":"34"},{"size":1413,"mtime":1609455519086,"results":"39","hashOfConfig":"34"},{"size":1022,"mtime":1609432522750,"results":"40","hashOfConfig":"34"},{"size":6905,"mtime":1609452243706,"results":"41","hashOfConfig":"34"},{"size":851,"mtime":1609430592133,"results":"42","hashOfConfig":"34"},{"size":987,"mtime":1609430286652,"results":"43","hashOfConfig":"34"},{"size":216,"mtime":1609419242861,"results":"44","hashOfConfig":"34"},{"size":1446,"mtime":1609447320314,"results":"45","hashOfConfig":"34"},{"size":225,"mtime":1609429116021,"results":"46","hashOfConfig":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eotryk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1ls2dmj",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"/Users/anna.welc/PhpstormProjects/planner/frontend/src/index.tsx",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/App.tsx",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/reportWebVitals.ts",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/useFetch.ts",["94"],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/Recipes.tsx",["95"],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/AddRecipe.tsx",["96","97","98","99","100"],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/Home.tsx",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/ShoppingList.tsx",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/Recipe.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/index.tsx",[],["101","102"],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/reportWebVitals.ts",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/App.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/AddRecipeConnector.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/Home.tsx",["103"],"import React, { FunctionComponent, useState } from 'react';\nimport { Calendar, Layout, Spin, Input, Typography, Modal, Button, Checkbox } from 'antd';\nimport moment, { Moment } from 'moment';\nimport { fetchData } from './useFetch';\n\nimport { useFetch, MethodType } from './useFetch';\nimport { Recipes } from './Recipes';\nimport { Ingredient, RecipeType } from './Recipes';\nimport { BASE_URL } from './constants/config';\nimport { useRecipesContext } from './useRecipesContext';\n\nconst { Content, Sider } = Layout;\nconst { Search } = Input;\nconst { Title } = Typography;\n\ninterface CheckboxType extends Ingredient {\n  isChecked: boolean;\n  id: string;\n}\n\ninterface DayType {\n  name: string;\n  count: string;\n  unit: string;\n}\n\nexport interface DaysType {\n  [key: string]: DayType[]\n}\n\nconst addCheckboxValues = (ingredients: Ingredient[]) => {\n  return ingredients.map((item, key) => {\n    return {\n      ...item,\n      isChecked: true,\n      id: `checkbox-${key}`\n    }\n  })\n};\n\nexport const Home: FunctionComponent = () => {\n  const { recipes, setRecipes } = useRecipesContext();\n  const [date, setDate] = useState(moment());\n  const [recipeToDateModalVisibility, setRecipeToDateModalVisibility] = useState(false);\n  const [ingredients, setIngredients] = useState<CheckboxType[]>([]);\n  const [chosenRecipeId, setRecipeId] = useState<string | null>(null);\n\n  const handleSetRecipeToDate = (ingredients: Ingredient[], id: string) => {\n    setIngredients(addCheckboxValues(ingredients));\n    setRecipeToDateModalVisibility(true);\n    setRecipeId(id);\n  };\n\n  const handleCancel = () => {\n    setRecipeToDateModalVisibility(false);\n  };\n\n  const recipesStatus = !recipes.length ? <Spin /> : null;\n  const recipesList = recipes.length ? <Recipes date={date} setRecipeToDate={handleSetRecipeToDate} /> : null;\n\n  const handleChange = (value: any) => {\n    setDate(value);\n  };\n\n  const onChangeCheckbox = (event: any) => {\n    const changedList = ingredients.map((item) => {\n      if (item.id === event.target.value) {\n        return {\n          ...item,\n          isChecked: !item.isChecked\n        }\n      }\n      return item;\n    });\n    setIngredients(changedList);\n  };\n\n  const handleButtonClick = () => {\n    if (chosenRecipeId) {\n      const time = moment(date).format('L');\n      const filteredIngredients = ingredients.filter((item) => item.isChecked);\n      const body = {\n        days: {\n          [time]: filteredIngredients\n        }\n      };\n      fetchData(`${BASE_URL}/recipes/${chosenRecipeId}`, MethodType.PATCH, body).then((result) => {\n        setRecipeToDateModalVisibility(false);\n        const updatedRecipes = recipes.map((item) => {\n          if (chosenRecipeId === item._id) {\n            return  {\n              ...item,\n              ...body\n            }\n          }\n          return item;\n        });\n\n        setRecipes(updatedRecipes);\n      });\n    }\n  };\n\n  const getListData = (value: Moment): RecipeType[] => {\n    const key = moment(value).format('L');\n    return recipes.filter((item: RecipeType) => {\n      if (!item.days) {\n        return false;\n      }\n      return Boolean(item.days[key]);\n    });\n  };\n\n  const dataCellRender = (value: any) => {\n    const listData = getListData(value);\n    return (\n      <ul className='recipes'>\n        {listData.map((item) => {\n          return (\n            <li>{item.name}</li>\n          )\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <Layout>\n      <Sider width={300} theme='light' style={{ padding: '0 20px'}}>\n        <Title level={4} style={{ marginTop: '10px' }}>List of recipes</Title>\n        <Search enterButton />\n        {recipesStatus}\n        {recipesList}\n      </Sider>\n      <Layout>\n        <Content style={{ padding: '20px' }}>\n          <Calendar onChange={handleChange} value={date} dateCellRender={dataCellRender} />\n        </Content>\n      </Layout>\n      <Modal\n        visible={recipeToDateModalVisibility}\n        title='Check list of ingredients to buy'\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <div>\n          {\n            ingredients.map((item) => {\n              return (\n                <Checkbox\n                  onChange={onChangeCheckbox}\n                  checked={item.isChecked}\n                  value={item.id}\n                  style={{display: 'block', marginLeft: 0 }}\n                >\n                  {item.name}, {item.count} {item.unit}\n                </Checkbox>\n              )\n            })\n          }\n        </div>\n        <Button type='primary' style={{ marginTop: '20px' }} onClick={handleButtonClick}>\n          Accept list and add to selected day\n        </Button>\n      </Modal>\n    </Layout>\n  )\n};\n","/Users/anna.welc/PhpstormProjects/planner-frontend/src/ShoppingList.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/useFetch.ts",["104"],"import { useState, useEffect } from 'react';\n\nexport type MethodTypeValues = 'POST' | 'PATCH' | 'DELETE' | 'GET';\n\nexport const MethodType: { [key in MethodTypeValues]: MethodTypeValues } = {\n  POST: 'POST',\n  PATCH: 'PATCH',\n  DELETE: 'DELETE',\n  GET: 'GET'\n};\n\nexport const fetchData = async (url: string, method: MethodTypeValues, body?: any) => {\n  const requestOptions = {\n    method: method,\n    headers: { 'Content-Type': 'application/json' },\n  };\n\n  if (body) {\n    // @ts-ignore\n    requestOptions.body = JSON.stringify(body);\n  }\n\n  return await fetch(url, requestOptions).then(response => response.json());\n};\n\nexport const useFetch = (url: string, method = MethodType.GET, body: any) => {\n  const [status, setStatus] = useState('idle');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (!url) return;\n    setStatus('fetching');\n    fetchData(url, method, body).then((result) => {\n      setData(result);\n      setStatus('fetched');\n    });\n  }, [url, method]);\n\n  return { status, data };\n};","/Users/anna.welc/PhpstormProjects/planner-frontend/src/AddRecipe.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/Recipes.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/Recipe.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/constants/config.ts",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/Context.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/useRecipesContext.ts",[],{"ruleId":"105","severity":1,"message":"106","line":38,"column":6,"nodeType":"107","endLine":38,"endColumn":19,"suggestions":"108"},{"ruleId":null,"fatal":true,"severity":2,"message":"109","line":16,"column":0},{"ruleId":"110","severity":1,"message":"111","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":19},{"ruleId":"110","severity":1,"message":"114","line":6,"column":21,"nodeType":"112","messageId":"113","endLine":6,"endColumn":31},{"ruleId":"110","severity":1,"message":"115","line":59,"column":10,"nodeType":"112","messageId":"113","endLine":59,"endColumn":20},{"ruleId":"110","severity":1,"message":"116","line":59,"column":22,"nodeType":"112","messageId":"113","endLine":59,"endColumn":35},{"ruleId":"110","severity":1,"message":"117","line":160,"column":9,"nodeType":"112","messageId":"113","endLine":160,"endColumn":18},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"110","severity":1,"message":"122","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":37,"column":6,"nodeType":"107","endLine":37,"endColumn":19,"suggestions":"123"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'body'. Either include it or remove the dependency array.","ArrayExpression",["124"],"Parsing error: Type expected.","@typescript-eslint/no-unused-vars","'fetchData' is defined but never used.","Identifier","unusedVar","'MethodType' is defined but never used.","'experyment' is assigned a value but never used.","'setExperyemnt' is assigned a value but never used.","'testInput' is assigned a value but never used.","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"'useFetch' is defined but never used.",["127"],{"desc":"128","fix":"129"},"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"130"},"Update the dependencies array to be: [url, method, body]",{"range":"131","text":"132"},{"range":"133","text":"132"},[1007,1020],"[url, method, body]",[976,989]]