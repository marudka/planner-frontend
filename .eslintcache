[{"/Users/anna.welc/PhpstormProjects/planner/frontend/src/index.tsx":"1","/Users/anna.welc/PhpstormProjects/planner/frontend/src/App.tsx":"2","/Users/anna.welc/PhpstormProjects/planner/frontend/src/reportWebVitals.ts":"3","/Users/anna.welc/PhpstormProjects/planner/frontend/src/useFetch.ts":"4","/Users/anna.welc/PhpstormProjects/planner/frontend/src/Recipes.tsx":"5","/Users/anna.welc/PhpstormProjects/planner/frontend/src/AddRecipe.tsx":"6","/Users/anna.welc/PhpstormProjects/planner/frontend/src/Home.tsx":"7","/Users/anna.welc/PhpstormProjects/planner/frontend/src/ShoppingList.tsx":"8","/Users/anna.welc/PhpstormProjects/planner/frontend/src/Recipe.tsx":"9","/Users/anna.welc/PhpstormProjects/planner-frontend/src/index.tsx":"10","/Users/anna.welc/PhpstormProjects/planner-frontend/src/reportWebVitals.ts":"11","/Users/anna.welc/PhpstormProjects/planner-frontend/src/App.tsx":"12","/Users/anna.welc/PhpstormProjects/planner-frontend/src/Home.tsx":"13","/Users/anna.welc/PhpstormProjects/planner-frontend/src/ShoppingList.tsx":"14","/Users/anna.welc/PhpstormProjects/planner-frontend/src/useFetch.ts":"15","/Users/anna.welc/PhpstormProjects/planner-frontend/src/AddRecipe.tsx":"16","/Users/anna.welc/PhpstormProjects/planner-frontend/src/Recipes.tsx":"17","/Users/anna.welc/PhpstormProjects/planner-frontend/src/Recipe.tsx":"18","/Users/anna.welc/PhpstormProjects/planner-frontend/src/constants/config.ts":"19","/Users/anna.welc/PhpstormProjects/planner-frontend/src/Context.tsx":"20","/Users/anna.welc/PhpstormProjects/planner-frontend/src/useRecipesContext.ts":"21","/Users/anna.welc/PhpstormProjects/planner-frontend/src/DrawerContent.tsx":"22","/Users/anna.welc/PhpstormProjects/planner-frontend/src/EditForm.tsx":"23","/Users/anna.welc/PhpstormProjects/planner-frontend/src/context/socket.tsx":"24"},{"size":500,"mtime":1606838642657,"results":"25","hashOfConfig":"26"},{"size":1464,"mtime":1607013842732,"results":"27","hashOfConfig":"26"},{"size":425,"mtime":1606838642659,"results":"28","hashOfConfig":"26"},{"size":1053,"mtime":1606894624135,"results":"29","hashOfConfig":"26"},{"size":682,"mtime":1607261228394,"results":"30","hashOfConfig":"26"},{"size":6905,"mtime":1607167882854,"results":"31","hashOfConfig":"26"},{"size":4363,"mtime":1607279436987,"results":"32","hashOfConfig":"26"},{"size":1387,"mtime":1607287397351,"results":"33","hashOfConfig":"26"},{"size":987,"mtime":1607277413335,"results":"34","hashOfConfig":"26"},{"size":500,"mtime":1606838642657,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1606838642659,"results":"37","hashOfConfig":"36"},{"size":1779,"mtime":1611604599183,"results":"38","hashOfConfig":"36"},{"size":6802,"mtime":1611437649760,"results":"39","hashOfConfig":"36"},{"size":2068,"mtime":1611607634405,"results":"40","hashOfConfig":"36"},{"size":1022,"mtime":1609432522750,"results":"41","hashOfConfig":"36"},{"size":8456,"mtime":1618770209398,"results":"42","hashOfConfig":"36"},{"size":1046,"mtime":1618690622868,"results":"43","hashOfConfig":"36"},{"size":2099,"mtime":1618758673579,"results":"44","hashOfConfig":"36"},{"size":216,"mtime":1609419242861,"results":"45","hashOfConfig":"36"},{"size":1446,"mtime":1609447320314,"results":"46","hashOfConfig":"36"},{"size":225,"mtime":1609429116021,"results":"47","hashOfConfig":"36"},{"size":1691,"mtime":1618762607067,"results":"48","hashOfConfig":"36"},{"size":5717,"mtime":1618691856621,"results":"49","hashOfConfig":"36"},{"size":255,"mtime":1611605861585,"results":"50","hashOfConfig":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eotryk",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"m0w7v6",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/anna.welc/PhpstormProjects/planner/frontend/src/index.tsx",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/App.tsx",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/reportWebVitals.ts",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/useFetch.ts",["103"],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/Recipes.tsx",["104"],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/AddRecipe.tsx",["105","106","107","108","109"],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/Home.tsx",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/ShoppingList.tsx",[],"/Users/anna.welc/PhpstormProjects/planner/frontend/src/Recipe.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/index.tsx",[],["110","111"],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/reportWebVitals.ts",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/App.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/Home.tsx",["112"],"import React, { FunctionComponent, useState } from 'react';\nimport { Calendar, Layout, Spin, Input, Typography, Modal, Button, Checkbox, Drawer, Empty } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport moment, { Moment } from 'moment';\nimport { fetchData } from './useFetch';\n\nimport { MethodType } from './useFetch';\nimport { Recipes } from './Recipes';\nimport { Ingredient, RecipeType } from './Recipes';\nimport { BASE_URL } from './constants/config';\nimport { useRecipesContext } from './useRecipesContext';\nimport { DrawerContent } from './DrawerContent';\n\nconst { Content, Sider } = Layout;\nconst { Search } = Input;\nconst { Title } = Typography;\n\ninterface CheckboxType extends Ingredient {\n  isChecked: boolean;\n  id: string;\n}\n\ninterface DayType {\n  name: string;\n  count: string;\n  unit: string;\n}\n\nexport interface DaysType {\n  [key: string]: DayType[]\n}\n\nconst addCheckboxValues = (ingredients: Ingredient[]) => {\n  return ingredients.map((item, key) => {\n    return {\n      ...item,\n      isChecked: true,\n      id: `checkbox-${key}`\n    }\n  })\n};\n\nexport const Home: FunctionComponent = () => {\n  const { recipes, setRecipes } = useRecipesContext();\n  const [date, setDate] = useState(moment());\n  const [recipeToDateModalVisibility, setRecipeToDateModalVisibility] = useState(false);\n  const [ingredients, setIngredients] = useState<CheckboxType[]>([]);\n  const [chosenRecipeId, setRecipeId] = useState<string | null>(null);\n  const [isVisibleDrawer, setVisibleDrawer] = useState(false);\n  const [isEditMode, setEditMode] = useState(false);\n  const [chosenRecipeToShow, setRecipeToShow] = useState<string | null>(null);\n\n  const handleShowDrawer = (id: string, isEdit: boolean) => {\n    setRecipeToShow(id);\n    setEditMode(isEdit);\n    setVisibleDrawer(true);\n  };\n\n  const onCloseDrawer = () => {\n    setVisibleDrawer(false);\n  };\n\n  const handleSetRecipeToDate = (ingredients: Ingredient[], id: string) => {\n    setIngredients(addCheckboxValues(ingredients));\n    setRecipeToDateModalVisibility(true);\n    setRecipeId(id);\n  };\n\n  const handleCancel = () => {\n    setRecipeToDateModalVisibility(false);\n  };\n\n  const recipesStatus = !recipes.length ? <Spin /> : null;\n  const recipesList = recipes.length ? <Recipes date={date} setRecipeToDate={handleSetRecipeToDate} showDrawer={handleShowDrawer} /> : null;\n\n  const handleChange = (value: any) => {\n    setDate(value);\n  };\n\n  const onChangeCheckbox = (event: any) => {\n    const changedList = ingredients.map((item) => {\n      if (item.id === event.target.value) {\n        return {\n          ...item,\n          isChecked: !item.isChecked\n        }\n      }\n      return item;\n    });\n    setIngredients(changedList);\n  };\n\n  const handleButtonClick = () => {\n    if (chosenRecipeId) {\n      // const chosenRecipe = recipes.find((item) => item._id === chosenRecipeId);\n      const time = moment(date).format('L');\n      const filteredIngredients = ingredients.filter((item) => item.isChecked);\n      let body = {};\n      const updatedRecipes = recipes.map((item) => {\n        if (chosenRecipeId === item._id) {\n          body = {\n            days: {\n              ...item.days,\n              [time]: filteredIngredients\n            }\n          };\n          return  {\n            ...item,\n            ...body\n          }\n        }\n        return item;\n      });\n      fetchData(`${BASE_URL}/recipes/${chosenRecipeId}`, MethodType.PATCH, body).then(() => {\n        setRecipeToDateModalVisibility(false);\n        setRecipes(updatedRecipes);\n      });\n    }\n  };\n\n  const getListData = (value: Moment): RecipeType[] => {\n    const key = moment(value).format('L');\n    return recipes.filter((item: RecipeType) => {\n      if (!item.days) {\n        return false;\n      }\n      return Boolean(item.days[key]);\n    });\n  };\n\n  const handleDeleteFromDay = (day: any, id: any) => {\n    const clickedRecipe = recipes.find((item) => item._id === id);\n    if (clickedRecipe) {\n      const daysToChange = {...clickedRecipe.days};\n      delete daysToChange[day];\n      const body = {\n        days: daysToChange\n      };\n\n      fetchData(`${BASE_URL}/recipes/${id}`, MethodType.PATCH, body).then((result) => {\n        const updatedRecipes = recipes.map((item) => {\n          if (id === item._id) {\n            return  {\n              ...item,\n              days: daysToChange\n            }\n          }\n          return item;\n        });\n\n        setRecipes(updatedRecipes);\n      });\n    }\n  };\n\n  const dataCellRender = (value: any) => {\n    const listData = getListData(value);\n    const key = moment(value).format('L');\n    return (\n      <ul className='recipes' style={{ paddingLeft: '0' }}>\n        {listData.map((item) => {\n          return (\n            // @ts-ignore\n            <li>\n              <div>\n                <span className='truncate'>{item.name}</span>\n              </div>\n              <Button\n                icon={<DeleteOutlined />}\n                onClick={() => handleDeleteFromDay(key, item._id)}\n                size='small'\n                shape='circle'\n                style={{ marginLeft: '3px' }}\n              />\n            </li>\n          )\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <Layout>\n      <Sider width={300} theme='light' style={{ padding: '0 20px'}}>\n        <Title level={4} style={{ marginTop: '10px' }}>List of recipes</Title>\n        <Search enterButton />\n        {recipesStatus}\n        {recipesList}\n      </Sider>\n      <Layout>\n        <Content style={{ padding: '20px' }}>\n          <Calendar onChange={handleChange} value={date} dateCellRender={dataCellRender} />\n        </Content>\n      </Layout>\n      <Modal\n        visible={recipeToDateModalVisibility}\n        title='Check list of ingredients to buy'\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <div>\n          {\n            ingredients.map((item, index) => {\n              return (\n                <Checkbox\n                  onChange={onChangeCheckbox}\n                  checked={item.isChecked}\n                  value={item.id}\n                  style={{display: 'block', marginLeft: 0 }}\n                  key={index}\n                >\n                  {item.name}, {item.count} {item.unit}\n                </Checkbox>\n              )\n            })\n          }\n        </div>\n        <Button type='primary' style={{ marginTop: '20px' }} onClick={handleButtonClick}>\n          Accept list and add to selected day\n        </Button>\n      </Modal>\n      <Drawer\n        title='Recipe details'\n        placement='right'\n        closable={false}\n        onClose={onCloseDrawer}\n        visible={isVisibleDrawer}\n        width={400}\n      >\n        {chosenRecipeToShow && <DrawerContent id={chosenRecipeToShow} isEditMode={isEditMode} />}\n      </Drawer>\n    </Layout>\n  )\n};\n","/Users/anna.welc/PhpstormProjects/planner-frontend/src/ShoppingList.tsx",["113"],"import React, { FunctionComponent, useState, useEffect, useContext } from 'react';\nimport { Layout, Spin, Typography, DatePicker } from 'antd';\nimport moment from 'moment';\n\nimport { RecipeType } from './Recipes';\nimport { useRecipesContext } from './useRecipesContext';\nimport { SocketContext } from './context/socket';\n\nconst { Content } = Layout;\nconst { Title } = Typography;\n\nexport const ShoppingList: FunctionComponent = () => {\n  const { recipes } = useRecipesContext();\n  const time = moment().format('L');\n  const [date, setDate] = useState(time);\n  const [actualRecipes, setActualRecipes] = useState<RecipeType[] | []>([]);\n  const recipesStatus = !recipes.length ? <Spin /> : null;\n  const socket = useContext(SocketContext);\n\n  useEffect(() => {\n    setActualRecipes(recipes)\n  }, [recipes]);\n\n  useEffect(() => {\n    // @ts-ignore\n    socket.on('RECIPE_ADDED_TO_DAY', (data: RecipeType) => {\n      const changedRecipes = recipes.map((item) => {\n        if (item._id === data._id) {\n          return data;\n        }\n        return item;\n      });\n      setActualRecipes(changedRecipes);\n    });\n  }, [socket]);\n\n  const handleChange = (date: any) => {\n    setDate(moment(date).format('L'));\n  };\n\n  console.log('recipes', recipes);\n  console.log('actual', actualRecipes);\n\n  const recipesList = actualRecipes.filter((item: RecipeType) => {\n    if (!item.days) {\n      return false;\n    }\n    return Boolean(item.days[date]);\n  });\n\n  // @ts-ignore\n  return (\n    <Layout>\n      <Content style={{ padding: '50px' }}>\n        <Title level={2}>\n          Shopping list\n        </Title>\n        <Title level={5}>Select date to chose ingredients list to buy</Title>\n        <DatePicker onChange={handleChange} defaultValue={moment()} style={{ marginBottom: '20px' }} />\n        {recipesStatus}\n        {\n          recipesList.map((item) => {\n            return item.days[date].map((item, index) => {\n              return <div key={index}>{item.name}, {item.count} {item.unit}</div>\n            });\n          })\n        }\n      </Content>\n    </Layout>\n  );\n};\n","/Users/anna.welc/PhpstormProjects/planner-frontend/src/useFetch.ts",["114"],"import { useState, useEffect } from 'react';\n\nexport type MethodTypeValues = 'POST' | 'PATCH' | 'DELETE' | 'GET';\n\nexport const MethodType: { [key in MethodTypeValues]: MethodTypeValues } = {\n  POST: 'POST',\n  PATCH: 'PATCH',\n  DELETE: 'DELETE',\n  GET: 'GET'\n};\n\nexport const fetchData = async (url: string, method: MethodTypeValues, body?: any) => {\n  const requestOptions = {\n    method: method,\n    headers: { 'Content-Type': 'application/json' },\n  };\n\n  if (body) {\n    // @ts-ignore\n    requestOptions.body = JSON.stringify(body);\n  }\n\n  return await fetch(url, requestOptions).then(response => response.json());\n};\n\nexport const useFetch = (url: string, method = MethodType.GET, body: any) => {\n  const [status, setStatus] = useState('idle');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (!url) return;\n    setStatus('fetching');\n    fetchData(url, method, body).then((result) => {\n      setData(result);\n      setStatus('fetched');\n    });\n  }, [url, method]);\n\n  return { status, data };\n};","/Users/anna.welc/PhpstormProjects/planner-frontend/src/AddRecipe.tsx",["115","116","117","118"],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/Recipes.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/Recipe.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/constants/config.ts",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/Context.tsx",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/useRecipesContext.ts",[],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/DrawerContent.tsx",["119"],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/EditForm.tsx",["120","121","122","123","124","125"],"/Users/anna.welc/PhpstormProjects/planner-frontend/src/context/socket.tsx",[],{"ruleId":"126","severity":1,"message":"127","line":38,"column":6,"nodeType":"128","endLine":38,"endColumn":19,"suggestions":"129"},{"ruleId":null,"fatal":true,"severity":2,"message":"130","line":16,"column":0},{"ruleId":"131","severity":1,"message":"132","line":6,"column":10,"nodeType":"133","messageId":"134","endLine":6,"endColumn":19},{"ruleId":"131","severity":1,"message":"135","line":6,"column":21,"nodeType":"133","messageId":"134","endLine":6,"endColumn":31},{"ruleId":"131","severity":1,"message":"136","line":59,"column":10,"nodeType":"133","messageId":"134","endLine":59,"endColumn":20},{"ruleId":"131","severity":1,"message":"137","line":59,"column":22,"nodeType":"133","messageId":"134","endLine":59,"endColumn":35},{"ruleId":"131","severity":1,"message":"138","line":160,"column":9,"nodeType":"133","messageId":"134","endLine":160,"endColumn":18},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"131","severity":1,"message":"143","line":2,"column":86,"nodeType":"133","messageId":"134","endLine":2,"endColumn":91},{"ruleId":"126","severity":1,"message":"144","line":35,"column":6,"nodeType":"128","endLine":35,"endColumn":14,"suggestions":"145"},{"ruleId":"126","severity":1,"message":"127","line":37,"column":6,"nodeType":"128","endLine":37,"endColumn":19,"suggestions":"146"},{"ruleId":"131","severity":1,"message":"147","line":2,"column":91,"nodeType":"133","messageId":"134","endLine":2,"endColumn":94},{"ruleId":"131","severity":1,"message":"148","line":2,"column":96,"nodeType":"133","messageId":"134","endLine":2,"endColumn":99},{"ruleId":"131","severity":1,"message":"149","line":54,"column":11,"nodeType":"133","messageId":"134","endLine":54,"endColumn":18},{"ruleId":"131","severity":1,"message":"150","line":54,"column":20,"nodeType":"133","messageId":"134","endLine":54,"endColumn":30},{"ruleId":"131","severity":1,"message":"151","line":6,"column":16,"nodeType":"133","messageId":"134","endLine":6,"endColumn":20},{"ruleId":"131","severity":1,"message":"152","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":22},{"ruleId":"131","severity":1,"message":"153","line":7,"column":10,"nodeType":"133","messageId":"134","endLine":7,"endColumn":20},{"ruleId":"131","severity":1,"message":"154","line":11,"column":9,"nodeType":"133","messageId":"134","endLine":11,"endColumn":15},{"ruleId":"131","severity":1,"message":"155","line":25,"column":27,"nodeType":"133","messageId":"134","endLine":25,"endColumn":41},{"ruleId":"131","severity":1,"message":"156","line":87,"column":9,"nodeType":"133","messageId":"134","endLine":87,"endColumn":35},{"ruleId":"131","severity":1,"message":"157","line":91,"column":9,"nodeType":"133","messageId":"134","endLine":91,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'body'. Either include it or remove the dependency array.","ArrayExpression",["158"],"Parsing error: Type expected.","@typescript-eslint/no-unused-vars","'fetchData' is defined but never used.","Identifier","unusedVar","'MethodType' is defined but never used.","'experyment' is assigned a value but never used.","'setExperyemnt' is assigned a value but never used.","'testInput' is assigned a value but never used.","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'Empty' is defined but never used.","React Hook useEffect has a missing dependency: 'recipes'. Either include it or remove the dependency array.",["161"],["162"],"'Row' is defined but never used.","'Col' is defined but never used.","'recipes' is assigned a value but never used.","'setRecipes' is assigned a value but never used.","'Text' is assigned a value but never used.","'PlusOutlined' is defined but never used.","'Ingredient' is defined but never used.","'Option' is assigned a value but never used.","'setIngredients' is assigned a value but never used.","'handleIngredientNameChange' is assigned a value but never used.","'handleIngredientCountChange' is assigned a value but never used.",{"desc":"163","fix":"164"},"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"163","fix":"167"},"Update the dependencies array to be: [url, method, body]",{"range":"168","text":"169"},"Update the dependencies array to be: [recipes, socket]",{"range":"170","text":"171"},{"range":"172","text":"169"},[1007,1020],"[url, method, body]",[1113,1121],"[recipes, socket]",[976,989]]